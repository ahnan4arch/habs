Index: habs/git-annex/src/git-annex-6.20160114/Utility/Url.hs
===================================================================
--- habs.orig/git-annex/src/git-annex-6.20160114/Utility/Url.hs
+++ habs/git-annex/src/git-annex-6.20160114/Utility/Url.hs
@@ -42,12 +42,8 @@ import Network.HTTP.Conduit hiding (clos
 
 -- closeManager is needed with older versions of http-client,
 -- but not new versions, which warn about using it. Urgh.
-#if ! MIN_VERSION_http_client(0,4,18)
-import Network.HTTP.Client (closeManager)
-#else
 closeManager :: Manager -> IO ()
 closeManager _ = return ()
-#endif
 
 managerSettings :: ManagerSettings
 #if MIN_VERSION_http_conduit(2,1,7)
Index: habs/git-annex/src/git-annex-6.20160114/Utility/QuickCheck.hs
===================================================================
--- habs.orig/git-annex/src/git-annex-6.20160114/Utility/QuickCheck.hs
+++ habs/git-annex/src/git-annex-6.20160114/Utility/QuickCheck.hs
@@ -21,12 +21,6 @@ import qualified Data.Set as S
 import Control.Applicative
 import Prelude
 
-instance (Arbitrary k, Arbitrary v, Eq k, Ord k) => Arbitrary (M.Map k v) where
-	arbitrary = M.fromList <$> arbitrary
-
-instance (Arbitrary v, Eq v, Ord v) => Arbitrary (S.Set v) where
-	arbitrary = S.fromList <$> arbitrary
-
 {- Times before the epoch are excluded. -}
 instance Arbitrary POSIXTime where
 	arbitrary = fromInteger <$> nonNegative arbitrarySizedIntegral
